version: 2.1

orbs:
  node: circleci/node@4.4
  slack: circleci/slack@4.4
  codecov: codecov/codecov@1.2

definitions:
  const_path_working_directory: &const_path_working_directory /mnt/ramdisk
  const_path_coverage_file: &const_path_coverage_file reports/coverage/lcov.info
  const_all_tags_regexp: &const_all_tags_regexp /^v(\d)+\.(\d)+.(\d)+(-(alpha|beta)\.(\d)+)?$/
  const_release_tags_regexp: &const_release_tags_regexp /^v(\d)+\.(\d)+.(\d)+$/
  const_prerelease_tags_regexp: &const_prerelease_tags_regexp /^v(\d)+\.(\d)+.(\d)+(-(alpha|beta)\.(\d)+)$/
  const_git_documentation_branch: &const_git_documentation_branch gh-pages

  filters_only_master: &filters_only_master
    filters:
      branches:
        only:
          - master
  filters_only_all_tags: &filters_only_all_tags
    filters:
      tags:
        only: *const_all_tags_regexp
      branches:
        ignore: /.*/
  filters_only_release_tags: &filters_only_release_tags
    filters:
      tags:
        only: *const_release_tags_regexp
      branches:
        ignore: /.*/
  filters_only_prerelease_tags: &filters_only_prerelease_tags
    filters:
      tags:
        only: *const_prerelease_tags_regexp
      branches:
        ignore: /.*/

  requires_dependencies: &requires_dependencies
    requires:
      - Install dependencies
  requires_checks_and_builds: &requires_checks_and_builds
    requires:
      - Lint
      - Test
      #- Upload test coverage
      - Scan for vulnerabilities
      - Build
      - Check bundle size
      - Generate docs

  context_slack: &context_slack
    context:
      - slack-integration
  context_slack_npm: &context_slack_npm
    context:
      - slack-integration
      - npm-publishing
  context_slack_bundlesize: &context_slack_bundlesize
    context:
      - slack-integration
      - bundlesize-github-integration

  step_attach_workspace: &step_attach_workspace
    attach_workspace:
      at: *const_path_working_directory
  step_slack_notify_fail: &step_slack_notify_fail
    slack/notify:
      event: fail
      template: basic_fail_1
  step_slack_notify_deploy_success: &step_slack_notify_deploy_success
    slack/notify:
      event: pass
      template: success_tagged_deploy_1

  job_defaults: &job_defaults
    executor:
      name: node/default
      tag: '14.18'
    working_directory: *const_path_working_directory

  workflow_build_test: &workflow_build_test
    jobs:
      - Install dependencies:
          <<: *context_slack
      - Lint:
          <<: *requires_dependencies
          <<: *context_slack
      - Test:
          <<: *requires_dependencies
          <<: *context_slack
      #- Upload test coverage:
      #    requires:
      #      - Test
      #    <<: *context_slack
      - Scan for vulnerabilities:
          <<: *filters_only_master
          <<: *requires_dependencies
          <<: *context_slack
      - Build:
          <<: *requires_dependencies
          <<: *context_slack
      - Check bundle size:
          requires:
            - Build
          <<: *context_slack_bundlesize
      - Generate docs:
          <<: *requires_dependencies
          <<: *context_slack

  workflow_release: &workflow_release
    jobs:
      - Install dependencies:
          <<: *filters_only_all_tags
          <<: *context_slack
      - Lint:
          <<: *filters_only_all_tags
          <<: *requires_dependencies
          <<: *context_slack
      - Test:
          <<: *filters_only_all_tags
          <<: *requires_dependencies
          <<: *context_slack
      #- Upload test coverage:
      #    <<: *filters_only_all_tags
      #    requires:
      #      - Test
      #    <<: *context_slack
      - Scan for vulnerabilities:
          <<: *filters_only_all_tags
          <<: *requires_dependencies
          <<: *context_slack
      - Build:
          <<: *filters_only_all_tags
          <<: *requires_dependencies
          <<: *context_slack
      - Check bundle size:
          <<: *filters_only_all_tags
          requires:
            - Build
          <<: *context_slack_bundlesize
      - Generate docs:
          <<: *filters_only_all_tags
          <<: *requires_dependencies
          <<: *context_slack
      - Deploy docs:
          <<: *filters_only_release_tags
          <<: *requires_checks_and_builds
          <<: *context_slack
      - Publish lib:
          name: Publish release lib
          <<: *filters_only_release_tags
          requires:
            - Deploy docs
          <<: *context_slack_npm
      - Publish lib:
          name: Publish pre-release lib
          <<: *filters_only_prerelease_tags
          <<: *requires_checks_and_builds
          <<: *context_slack_npm

jobs:
  Install dependencies:
    <<: *job_defaults
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
          app-dir: *const_path_working_directory
      - persist_to_workspace:
          root: *const_path_working_directory
          paths:
            - node_modules
      - <<: *step_slack_notify_fail

  Lint:
    <<: *job_defaults
    steps:
      - checkout
      - <<: *step_attach_workspace
      - run:
          name: Lint sources
          command: yarn run ci:lint
      - <<: *step_slack_notify_fail

  Test:
    <<: *job_defaults
    steps:
      - checkout
      - <<: *step_attach_workspace
      - run:
          name: Test
          command: yarn run ci:test
      - persist_to_workspace:
          root: *const_path_working_directory
          paths:
            - *const_path_coverage_file
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit
      - <<: *step_slack_notify_fail

  Upload test coverage:
    <<: *job_defaults
    steps:
      - checkout
      - <<: *step_attach_workspace
      - codecov/upload:
          file: *const_path_coverage_file
      - <<: *step_slack_notify_fail

  Scan for vulnerabilities:
    <<: *job_defaults
    steps:
      - checkout
      - <<: *step_attach_workspace
      - run:
          name: Scan for vulnerabilities
          command: yarn run ci:scan
      - <<: *step_slack_notify_fail

  Build:
    <<: *job_defaults
    steps:
      - checkout
      - <<: *step_attach_workspace
      - run:
          name: Build
          command: yarn run ci:build
      - persist_to_workspace:
          root: *const_path_working_directory
          paths:
            - lib
            - umd
      - store_artifacts:
          path: lib
      - store_artifacts:
          path: umd
      - <<: *step_slack_notify_fail

  Check bundle size:
    <<: *job_defaults
    steps:
      - checkout
      - <<: *step_attach_workspace
      - run:
          name: Check bundle size
          command: yarn run ci:bundlesize
      - <<: *step_slack_notify_fail

  Publish lib:
    <<: *job_defaults
    steps:
      - checkout
      - <<: *step_attach_workspace
      - run:
          name: Authenticate with registry
          command: |
            echo "registry=https://$NPM_REGISTRY_FQDN/" > ~/.npmrc
            echo "//$NPM_REGISTRY_FQDN/:_authToken=${NPM_REGISTRY_AUTOMATION_TOKEN}" >> ~/.npmrc
      - run:
          name: Publish package
          command: |
            if [[ $CIRCLE_TAG =~ ^.*(alpha|beta).*$ ]] ;
            then
              npm publish --tag ${BASH_REMATCH[1]} ;
            else
              npm publish ;
            fi
      - <<: *step_slack_notify_fail
      - <<: *step_slack_notify_deploy_success

  Generate docs:
    <<: *job_defaults
    steps:
      - checkout
      - <<: *step_attach_workspace
      - run:
          name: Generate documentation
          command: yarn run ci:docs
      - persist_to_workspace:
          root: *const_path_working_directory
          paths:
            - docs
      - store_artifacts:
          path: docs
      - <<: *step_slack_notify_fail

  Deploy docs:
    <<: *job_defaults
    steps:
      - checkout
      - <<: *step_attach_workspace
      - run:
          name: Configure git
          command: |
            git config user.email "vgui-ci@fake.email"
            git config user.name "vgui-ci"
      - add_ssh_keys:
          fingerprints:
            - '80:29:55:1f:57:21:ad:33:09:a9:31:04:87:aa:38:13'
      - run:
          name: Create an empty documentation branch if not exist
          command: |
            if git rev-parse --verify origin/$GIT_DOCUMENTATION_BRANCH ; then exit 0 ; fi
            git checkout --orphan $GIT_DOCUMENTATION_BRANCH --track remote/$GIT_DOCUMENTATION_BRANCH
            git rm -rf .
            git commit -m '[skip ci] docs(docs): creating documentation branch' --allow-empty
            git push origin $GIT_DOCUMENTATION_BRANCH
            git checkout $GIT_CURRENT_REVISION
          environment:
            GIT_DOCUMENTATION_BRANCH: *const_git_documentation_branch
            GIT_CURRENT_REVISION: <<pipeline.git.revision>>
      - run:
          name: Deploy documentation
          command: yarn run cd:deploy-docs
      - <<: *step_slack_notify_fail

workflows:
  version: 2

  Build & Test:
    <<: *workflow_build_test

  Release:
    <<: *workflow_release

  #Nightly:
  #  <<: *workflow_build_test
  #  triggers:
  #    - schedule:
  #        cron: '0 3 * * *'
  #        <<: *filters_only_master

  Weekly:
    <<: *workflow_build_test
    triggers:
      - schedule:
          cron: '0 4 * * 0'
          <<: *filters_only_master
